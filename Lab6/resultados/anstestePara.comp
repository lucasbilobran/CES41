programa ExemploSimples {{{

   var {
      int (i)
      logic (achou)
   }

   principal 

      var {
         int (j, sum, total)
         carac (ca)
      }

      comandos {
         ca = 'v' ;
         sum = 1;
         para i (2; i < 5; i + 2) {
            sum = sum * 10;
         }
         total = 0;
         para i (0; i < 5; i + 1) {
            sum = sum * 10;
            para j (0; j < 10; j + 2) {
               total = total + sum;
            }
         }
      }

}}}


===== VARIAVEIS NAO DECLARADAS OU NAO REFERENCIADAS: =====

Variavel i (Escopo: ##global): Nao Inicializada
Variavel j (Escopo: ##principal): Nao Inicializada
Variavel achou (Escopo: ##global): Nao Inicializada
Variavel achou (Escopo: ##global): Nao Referenciada


===== TABELA  DE  SIMBOLOS: =====

Classe 4:
  (##1, IDVAR, LOGICAL, 1, 1 | Escopo: ##principal)
Classe 5:
  (##2, IDVAR, INTEGER, 1, 1 | Escopo: ##principal)
  (##global, GLOBAL)
Classe 6:
  (##3, IDVAR, INTEGER, 1, 1 | Escopo: ##principal)
Classe 7:
  (##4, IDVAR, LOGICAL, 1, 1 | Escopo: ##principal)
Classe 8:
  (##5, IDVAR, INTEGER, 1, 1 | Escopo: ##principal)
Classe 9:
  (##6, IDVAR, INTEGER, 1, 1 | Escopo: ##principal)
Classe 10:
  (##7, IDVAR, LOGICAL, 1, 1 | Escopo: ##principal)
Classe 11:
  (##8, IDVAR, INTEGER, 1, 1 | Escopo: ##principal)
Classe 12:
  (##9, IDVAR, INTEGER, 1, 1 | Escopo: ##principal)
  (ca, IDVAR, CHAR, 1, 1 | Escopo: ##principal)
Classe 13:
  (i, IDVAR, INTEGER, 0, 1 | Escopo: ##global)
Classe 14:
  (j, IDVAR, INTEGER, 0, 1 | Escopo: ##principal)
  (ExemploSimples, IDPROG | Escopo: ##global)
Classe 19:
  (total, IDVAR, INTEGER, 1, 1 | Escopo: ##principal)
  (sum, IDVAR, INTEGER, 1, 1 | Escopo: ##principal)
Classe 20:
  (##principal, IDPROG | Escopo: ##global)
Classe 22:
  (achou, IDVAR, LOGICAL, 0, 0 | Escopo: ##global)


Quadruplas do modulo ExemploSimples:

	   1) OPENMOD, (MODULO, ExemploSimples), (IDLE), (IDLE)
	   2) CALL, (MODULO, ##principal), (IDLE), (IDLE)
	   3) EXIT, (IDLE), (IDLE), (IDLE)

Quadruplas do modulo ##principal:

	   1) ATRIB, (CARAC, v), (IDLE), (VAR, ca)
	   2) ATRIB, (INT, 1), (IDLE), (VAR, sum)
	   3) ATRIB, (INT, 2), (IDLE), (VAR, i)
	   4) NOP, (IDLE), (IDLE), (IDLE)
	   5) LT, (VAR, i), (INT, 5), (VAR, ##1)
	   6) JF, (VAR, ##1), (IDLE), (ROTULO, 14)
	   7) NOP, (IDLE), (IDLE), (IDLE)
	   8) MULT, (VAR, sum), (INT, 10), (VAR, ##3)
	   9) ATRIB, (VAR, ##3), (IDLE), (VAR, sum)
	  10) NOP, (IDLE), (IDLE), (IDLE)
	  11) MAIS, (VAR, i), (INT, 2), (VAR, ##2)
	  12) ATRIB, (VAR, ##2), (IDLE), (VAR, i)
	  13) JUMP, (IDLE), (IDLE), (ROTULO, 4)
	  14) NOP, (IDLE), (IDLE), (IDLE)
	  15) ATRIB, (INT, 0), (IDLE), (VAR, total)
	  16) ATRIB, (INT, 0), (IDLE), (VAR, i)
	  17) NOP, (IDLE), (IDLE), (IDLE)
	  18) LT, (VAR, i), (INT, 5), (VAR, ##4)
	  19) JF, (VAR, ##4), (IDLE), (ROTULO, 39)
	  20) NOP, (IDLE), (IDLE), (IDLE)
	  21) MULT, (VAR, sum), (INT, 10), (VAR, ##6)
	  22) ATRIB, (VAR, ##6), (IDLE), (VAR, sum)
	  23) ATRIB, (INT, 0), (IDLE), (VAR, j)
	  24) NOP, (IDLE), (IDLE), (IDLE)
	  25) LT, (VAR, j), (INT, 10), (VAR, ##7)
	  26) JF, (VAR, ##7), (IDLE), (ROTULO, 34)
	  27) NOP, (IDLE), (IDLE), (IDLE)
	  28) MAIS, (VAR, total), (VAR, sum), (VAR, ##9)
	  29) ATRIB, (VAR, ##9), (IDLE), (VAR, total)
	  30) NOP, (IDLE), (IDLE), (IDLE)
	  31) MAIS, (VAR, j), (INT, 2), (VAR, ##8)
	  32) ATRIB, (VAR, ##8), (IDLE), (VAR, j)
	  33) JUMP, (IDLE), (IDLE), (ROTULO, 24)
	  34) NOP, (IDLE), (IDLE), (IDLE)
	  35) NOP, (IDLE), (IDLE), (IDLE)
	  36) MAIS, (VAR, i), (INT, 1), (VAR, ##5)
	  37) ATRIB, (VAR, ##5), (IDLE), (VAR, i)
	  38) JUMP, (IDLE), (IDLE), (ROTULO, 17)
	  39) NOP, (IDLE), (IDLE), (IDLE)
	  40) RETURN, (IDLE), (IDLE), (IDLE)


INTERPRETADOR:

   1) OPENMOD
		Alocando as variaveis:
			##1: 1 elemento(s) alocado(s) 
			##2: 1 elemento(s) alocado(s) 
			##3: 1 elemento(s) alocado(s) 
			##4: 1 elemento(s) alocado(s) 
			##5: 1 elemento(s) alocado(s) 
			##6: 1 elemento(s) alocado(s) 
			##7: 1 elemento(s) alocado(s) 
			##8: 1 elemento(s) alocado(s) 
			##9: 1 elemento(s) alocado(s) 
			ca: 1 elemento(s) alocado(s) 
			i: 1 elemento(s) alocado(s) 
			j: 1 elemento(s) alocado(s) 
			total: 1 elemento(s) alocado(s) 
			sum: 1 elemento(s) alocado(s) 
			achou: 1 elemento(s) alocado(s) 
   2) CALL

EITA:

   3) EXIT


Programa Compilado com Sucesso!

