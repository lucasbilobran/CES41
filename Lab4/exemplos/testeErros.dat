programa TestandoASemantica {{{

   var {
      int (glob1, glob2)
   }

   funcao int  Test (int argint, real argreal, carac argcarac, logic arclogic)

      var {
         int (soma, i)
         int (soma

***** Declaracao Repetida: soma *****
)
         int (glob1)
         real (pi)
         carac (c)
         logic (implicacao)
      }

      comandos {
         soma = glob2;
         soma = variavelalieligena

***** Identificador Nao Declarado: variavelalieligena *****

;

***** Incompatibilidade: Lado direito de comando de atribuicao improprio *****


         glob1 = soma + argcarac;
         glob1 = argreal;

***** Incompatibilidade: Lado direito de comando de atribuicao improprio *****


         glob1 = arclogic;

***** Incompatibilidade: Lado direito de comando de atribuicao improprio *****


         pi = soma + argreal - argcarac;
         pi = soma + argreal - argcarac + arclogic

***** Incompatibilidade: Operando improprio para operador aritmetico *****

;
         c = soma * argcarac;
         c = soma + argcarac + argreal;

***** Incompatibilidade: Lado direito de comando de atribuicao improprio *****


         c = arclogic;

***** Incompatibilidade: Lado direito de comando de atribuicao improprio *****


         implicacao = arclogic && !arclogic || arclogic;
         implicacao = soma + argreal + argcarac;

***** Incompatibilidade: Lado direito de comando de atribuicao improprio *****


         se (c

***** Incompatibilidade: Expressao nao logica *****

) 
            soma = 0;
         se (c == argcarac) 
            soma = soma + 1;
         senao 
            soma = soma - 1;
         enquanto (c != 's') {
            c = c + 1;
         }
         enquanto (c

***** Incompatibilidade: Expressao nao logica *****

) {
            c = c + 1;
         }
         repetir 
{
            argint = argint - 1;
         }enquanto (argint

***** Incompatibilidade: Expressao nao logica *****

);
            para i (1; i <= 50; i + 1) 
               i = i * 2;
            para argreal

***** Incompatibilidade: Expressao nao inteiro ou caractere *****

 (argreal

***** Incompatibilidade: Expressao nao inteiro ou caractere *****

; c

***** Incompatibilidade: Expressao nao logica *****

; implicacao

***** Incompatibilidade: Expressao nao inteiro ou caractere *****

) 
               i = i * 2;
            retornar ;

***** Incompatibilidade: Retorno da funcao improprio *****


         }

      procedimento Exibir ()

         var {
            int (a)
            real (re)
            logic (flag)
         }

         comandos {
            chamar Exibir (

***** Procedimento desconhecido: Exibir *****


Recursao da ma sorte! (Essa linguagem nao permite recursao)
);
            retornar a;

***** Incompatibilidade: Procedimento nao deve retornar variavel *****


         }

      funcao int 

***** Declaracao Repetida: glob1 *****

***** Erro: Um módulo não pode ter o mesmo nome que o de uma variável global *****
glob1 ()

         var {
            int (meuint, arrayerrado[0

*****Esperado: Valor inteiro positivo *****

, 50], meuarray[10, 50], meuarray2[10])
            real (meuarrayreal[10])
            logic (loc)
         }

         comandos {
            meuarray[6, 5] = meuint[2]

*****Nao Esperado: Subscrito(s) *****

;
            meuarray[6, 7] = meuarray2[2, 3]

***** Incompatibilidade: Numero de subscritos incompativel com declaracao *****

;
            chamar Exibir (

***** Procedimento desconhecido: Exibir *****

);
            meuint = Test (1, 1, 'a', falso);
            meuint = Test (1, 1, 'a', falso, 4)

***** Incompatibilidade: Numero de argumentos diferente do numero de parametros *****

;
            meuint = Test (loc, 1, 'a', falso)

***** Incompatibilidade: Esperava-se inteiro ou caractere *****

;
            meuint = Test (2.34, 1, 'a', falso)

***** Incompatibilidade: Esperava-se inteiro ou caractere *****

;
            meuint = Test (1, loc, 'a', falso)

***** Incompatibilidade: Esperava-se numero real *****

;
            meuint = Test (1, 1, loc, falso)

***** Incompatibilidade: Esperava-se inteiro ou caractere *****

;
            meuint = Test (2, 1, 'a', 3)

***** Incompatibilidade: Esperava-se booleana *****

;
            retornar loc;

***** Incompatibilidade: Retorno da funcao improprio *****


         }

      principal 

         var {
            int (a)
         }

         comandos {
            a = a + 1;
            retornar ;
         }

}}}


===== VARIAVEIS NAO DECLARADAS OU NAO REFERENCIADAS: =====

Variavel meuarray2 (Escopo: glob1): Nao Inicializada
Variavel meuarrayreal (Escopo: glob1): Nao Inicializada
Variavel meuarrayreal (Escopo: glob1): Nao Referenciada
Variavel a (Escopo: Exibir): Nao Inicializada
Variavel arrayerrado (Escopo: glob1): Nao Inicializada
Variavel arrayerrado (Escopo: glob1): Nao Referenciada
Variavel variavelalieligena (Escopo: Test): Nao Inicializada
Variavel re (Escopo: Exibir): Nao Inicializada
Variavel re (Escopo: Exibir): Nao Referenciada
Variavel glob1 (Escopo: ##global): Nao Inicializada
Variavel glob1 (Escopo: ##global): Nao Referenciada
Variavel glob2 (Escopo: ##global): Nao Inicializada
Variavel loc (Escopo: glob1): Nao Inicializada
Variavel flag (Escopo: Exibir): Nao Inicializada
Variavel flag (Escopo: Exibir): Nao Referenciada


===== TABELA  DE  SIMBOLOS: =====

Classe 0:
  (meuarray2, IDVAR, INTEGER, 0, 1EH ARRAY
 	dims = 1, dimensoes: 10 | Escopo: glob1)
Classe 1:
  (argint, IDVAR, INTEGER, 1, 1 | Escopo: Test)
Classe 2:
  (meuarrayreal, IDVAR, FLOAT, 0, 0EH ARRAY
 	dims = 1, dimensoes: 10 | Escopo: glob1)
  (Test, IDFUNC | Escopo: ##global)
Classe 5:
  (a, IDVAR, INTEGER, 1, 1 | Escopo: ##principal)
  (a, IDVAR, INTEGER, 0, 1 | Escopo: Exibir)
  (##global, GLOBAL)
Classe 7:
  (arrayerrado, IDVAR, INTEGER, 0, 0EH ARRAY
 	dims = 2, dimensoes: 0 50 | Escopo: glob1)
  (variavelalieligena, IDVAR, LOGICAL, 0, 1 | Escopo: Test)
  (implicacao, IDVAR, LOGICAL, 1, 1 | Escopo: Test)
  (c, IDVAR, CHAR, 1, 1 | Escopo: Test)
Classe 8:
  (re, IDVAR, FLOAT, 0, 0 | Escopo: Exibir)
  (arclogic, IDVAR, LOGICAL, 1, 1 | Escopo: Test)
Classe 9:
  (glob1, IDFUNC | Escopo: ##global)
  (glob1, IDVAR, INTEGER, 1, 1 | Escopo: Test)
  (glob1, IDVAR, INTEGER, 0, 0 | Escopo: ##global)
Classe 10:
  (pi, IDVAR, FLOAT, 1, 1 | Escopo: Test)
  (glob2, IDVAR, INTEGER, 0, 1 | Escopo: ##global)
Classe 13:
  (Exibir, IDPROC | Escopo: ##global)
  (i, IDVAR, INTEGER, 1, 1 | Escopo: Test)
Classe 14:
  (meuint, IDVAR, INTEGER, 1, 1 | Escopo: glob1)
Classe 15:
  (argcarac, IDVAR, CHAR, 1, 1 | Escopo: Test)
Classe 18:
  (soma, IDVAR, INTEGER, 1, 1 | Escopo: Test)
Classe 19:
  (loc, IDVAR, LOGICAL, 0, 1 | Escopo: glob1)
  (meuarray, IDVAR, INTEGER, 1, 1EH ARRAY
 	dims = 2, dimensoes: 10 50 | Escopo: glob1)
  (flag, IDVAR, LOGICAL, 0, 0 | Escopo: Exibir)
Classe 20:
  (##principal, IDPROG | Escopo: ##global)
Classe 21:
  (argreal, IDVAR, FLOAT, 1, 1 | Escopo: Test)
Classe 22:
  (TestandoASemantica, IDPROG | Escopo: ##global)


PROGRAMA COM ERROS SEMÂNTICOS!

